{% for make in makes %}
    <details class="dropdown" onclick="dropdownOnclick(this)">
        <summary>
            {{ make.code }} - {{ make.description }}
        </summary>

        <div class="models" data-url="{{ path('model_list_by_vehicle_type_and_make_code', {type: make.type.code, makeCode: make.code}) }}">
        </div>
    </details>
{% endfor %}

<script>
    function dropdownOnclick(e) {
        let modelsDiv = e.children[1];
        let url = modelsDiv.attributes.getNamedItem('data-url').value;

        if (modelsDiv.innerHTML.trim().length > 0) {
            return
        }

        getModels(url)
            .then((e) => {
                if (e.length === 0) {
                    modelsDiv.innerHTML = 'Models not found'
                    return
                }

                modelsDiv.innerHTML = e.map((model) => {
                    return model['code'] + ' - ' + model['description'];
                }).join('<br />')
            })
            .catch((e) => {
                console.error(e)
                modelsDiv.innerHTML = 'Fetching error';
            })
    }

    async function getModels(path) {
        return await new Promise(resolve => {
            let xhr = new XMLHttpRequest();
            xhr.open('POST', path);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onload = () => {
                try {
                    let json = JSON.parse(xhr.response)
                    resolve(json);
                } catch (e) {
                    resolve(xhr.response);
                }
            };
            xhr.onerror = function () {
                resolve(undefined);
                console.error("An error occurred during the XMLHttpRequest");
            };
            xhr.send();
        })
    }
</script>

<style>
    .dropdown {
        cursor: pointer;
        margin-top: 1em;
    }

    .dropdown:hover {
        color: green;
    }
</style>